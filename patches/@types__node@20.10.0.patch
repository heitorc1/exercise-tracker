diff --git a/test.d.ts b/test.d.ts
index 44b6a96408bf8ffbb6f4072309fd1cfa7030ade5..95c9d54746855c76dcefd73134b3eddb6c77dcd3 100644
--- a/test.d.ts
+++ b/test.d.ts
@@ -1007,7 +1007,11 @@ declare module "node:test" {
          */
         restore(): void;
     }
-    type Timer = "setInterval" | "clearInterval" | "setTimeout" | "clearTimeout";
+    type Timer = "setInterval" | "setTimeout" | "setImmediate" | "Date";
+    interface MockTimersOptions {
+        apis: Timer[];
+        now?: number | Date;
+    }
     /**
      * Mocking timers is a technique commonly used in software testing to simulate and
      * control the behavior of timers, such as `setInterval` and `setTimeout`,
@@ -1042,7 +1046,26 @@ declare module "node:test" {
          * and `globalThis` will be mocked.
          * @since v20.4.0
          */
-        enable(timers?: Timer[]): void;
+        enable(options?: MockTimersOptions): void;
+        /**
+         * You can use the `.setTime()` method to manually move the mocked date to another time. This method only accepts a positive integer.
+         * Note: This method will execute any mocked timers that are in the past from the new time.
+         * In the below example we are setting a new time for the mocked date.
+         * ```js
+         * import assert from 'node:assert';
+         * import { test } from 'node:test';
+         * test('sets the time of a date object', (context) => {
+         *   // Optionally choose what to mock
+         *   context.mock.timers.enable({ apis: ['Date'], now: 100 });
+         *   assert.strictEqual(Date.now(), 100);
+         *   // Advance in time will also advance the date
+         *   context.mock.timers.setTime(1000);
+         *   context.mock.timers.tick(200);
+         *   assert.strictEqual(Date.now(), 1200);
+         * });
+         * ```
+         */
+        setTime(time: number): void;
         /**
          * This function restores the default behavior of all mocks that were previously
          * created by this `MockTimers` instance and disassociates the mocks
